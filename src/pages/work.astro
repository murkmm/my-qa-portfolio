---
import { getCollection, type CollectionEntry } from 'astro:content';
import ContactCTA from '../components/ContactCTA.astro';
import Hero from '../components/Hero.astro';
import PortfolioPreview from '../components/PortfolioPreview.astro';
import BaseLayout from '../layouts/BaseLayout.astro';

const projects = (await getCollection('work')).sort(
	(a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf()
);

// Group projects by year with correct TypeScript types
const groupedProjects = projects.reduce<Record<string, CollectionEntry<'work'>[]>>((acc, project) => {
	const year = new Date(project.data.publishDate).getFullYear();
	if (!acc[year]) {
		acc[year] = [];
	}
	acc[year].push(project);
	return acc;
}, {});

// Get the years and sort them correctly as numbers
const sortedYears = Object.keys(groupedProjects).sort((a, b) => Number(b) - Number(a));
---

<BaseLayout
	title="Project Case Studies | Mark McManus"
	description="A timeline of my projects and contributions throughout my career."
>
	<div class="stack gap-20">
		<main class="wrapper stack gap-8">
			<Hero
				title="Project Case Studies"
				tagline="A detailed look at the projects I've worked on. Here you'll find case studies outlining the challenges, my specific contributions, and the impact I had on the final product."
				align="start"
			/>

			<div class="timeline-container">
				{
					sortedYears.map((year) => (
						<div class="timeline-item">
							<div class="timeline-year-marker">
								<div class="year-text">{year}</div>
							</div>
							<ul class="timeline-projects">
								{groupedProjects[year].map((project) => (
									<li>
										<PortfolioPreview project={project} />
									</li>
								))}
							</ul>
						</div>
					))
				}
			</div>
		</main>
		<ContactCTA />
	</div>
</BaseLayout>

<style>
	/* --- MOBILE FIRST STYLES --- */
	.timeline-container {
		position: relative;
		display: flex;
		flex-direction: column;
		gap: 2rem;
		padding: 2rem 0;
	}

	/* The vertical line on mobile (on the left side) */
	.timeline-container::before {
		content: '';
		position: absolute;
		top: 0;
		left: 2.5rem; /* Aligns with the center of the year marker */
		transform: translateX(-50%);
		width: 2px;
		height: 100%;
		background-color: var(--gray-800);
	}

	/* On mobile, use a 2-column grid for the marker and the content */
	.timeline-item {
		position: relative;
		display: grid;
		grid-template-columns: auto 1fr;
		align-items: start;
		gap: 1.5rem;
	}

	.timeline-year-marker {
		grid-column: 1; /* Year marker in the first column */
		padding: 0; /* Adjusted for mobile alignment */
		z-index: 1;
	}
	
	.year-text {
		background-color: var(--accent-dark);
		color: var(--gray-999);
		border-radius: 999px;
		width: 5rem;
		height: 5rem;
		display: grid;
		place-items: center;
		font-weight: bold;
		font-size: 1.25rem;
	}

	.timeline-projects {
		grid-column: 2; /* Project tiles in the second column */
		list-style: none;
		padding: 0.75rem 0 0 0; /* Add padding to align with year text */
		margin: 0;
		display: flex;
		flex-direction: column;
		gap: 1.5rem;
	}
	
	/* --- DESKTOP TIMELINE STYLES --- */
	@media (min-width: 50em) {
		.timeline-container {
			gap: 4rem; /* Increase gap for desktop */
		}
		
		/* Move the line back to the center on desktop */
		.timeline-container::before {
			left: 50%;
		}

		/* Restore the 3-column grid for the alternating layout */
		.timeline-item {
			grid-template-columns: 1fr auto 1fr;
			gap: 2rem;
		}

		.timeline-year-marker {
			grid-column: 2; /* Put the year marker back in the middle */
			padding: 0.5rem;
		}

		.timeline-projects {
			padding-top: 0; /* Reset mobile padding */
		}

		/* Restore the alternating layout for project tiles */
		.timeline-item:nth-child(odd) .timeline-projects {
			grid-column: 3;
		}

		.timeline-item:nth-child(even) .timeline-projects {
			grid-column: 1;
		}

		/* This placeholder is needed to keep the grid balanced */
		.timeline-item:nth-child(odd)::before,
		.timeline-item:nth-child(even)::before {
			content: '';
			grid-column: 1;
		}
		.timeline-item:nth-child(even)::before {
			grid-column: 3;
		}
	}
</style>